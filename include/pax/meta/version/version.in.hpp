// This file is automatically generated by cmake.
// ANY MANUAL CHANGES TO THIS FILE WILL DISAPPEAR!


#pragma once

#define PAX_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define PAX_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define PAX_VERSION_PATCH @PROJECT_VERSION_PATCH@
#define PAX_REVISION    @PAX_PROJECT_REVISION@


// Generated at @PROJECT_DATE_TIME@ (@CMAKE_BUILD_TYPE@)
namespace pax {
	struct metadata {
		static constexpr const char *     author			=	"Peder Axensten, peder#axensten.se";
		static constexpr const char *     maintainer		=	"Peder Axensten, peder#axensten.se";
		static constexpr const char *     copyright			=	"@PROJECT_COPYRIGHT@";
		static constexpr const char *     license			=	"The 2-Clause BSD License";

		struct project {
			static constexpr const char * name				=	"@PROJECT_NAME@";
			static constexpr const char * named_version		=	"@PROJECT_NAME@ @PROJECT_VERSION@r@PAX_PROJECT_REVISION@";
			static constexpr unsigned     version[]			=	{ @PROJECT_VERSION_ARRAY@, @PAX_PROJECT_REVISION@ };
			static constexpr const char * title				=	"@pax_DESCRIPTION@";
			static constexpr const char * repository		=	"@PAX_PROJECT_REPOSITORY@";
			static constexpr auto         changeset			=	0x@PAX_PROJECT_CHANGESET@;
			static constexpr const char * changeset_sha1	=	"@PAX_PROJECT_CHANGESET_SHA1@";
			static constexpr const char * variant			=	"@PAX_PROJECT_VARIANT@";
		};

		struct compilation {
			static constexpr const char * name				=	"@CMAKE_CXX_COMPILER_ID@";
			static constexpr const char * named_version		=	"@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@";
			static constexpr unsigned     version[]			=	{ @CMAKE_CXX_COMPILER_VERSION_ARRAY@ };
			static constexpr const char   dateTtime[]		=	"@PROJECT_DATE_TIME@";
			static constexpr const char * cpp_standard		=	"C++@CMAKE_CXX_STANDARD@";
			static constexpr const char * standard_library	=	"@PAX_CPP_LIBRARY@";
			static constexpr const char * status			=	"@CMAKE_BUILD_TYPE@";	// Debug, Release or RelWithDebInfo
			static constexpr const char * processor			=	"@CMAKE_SYSTEM_PROCESSOR@";
			static constexpr const char * path				=	"@CMAKE_CXX_COMPILER@";
			static constexpr const char * flags[]			=	{
				"@PAX_FLAGS_NICE@"
			};
		};

		struct system {
			static constexpr const char * name_str			=	"@PAX_SYSTEM@";
			static constexpr const char * name				=	"@PAX_SYSTEM_NAME@";
			static constexpr const char * named_version		=	"@PAX_SYSTEM_NAME@ @CMAKE_SYSTEM_VERSION@";
			static constexpr const char * alias				=	"@PAX_SYSTEM_ALIAS@";
			static constexpr unsigned     version[]			=	{ @CMAKE_SYSTEM_VERSION_ARRAY@ };
			static constexpr bool         unix 				=	@IS_UNIX@;
			static constexpr bool         windows 			=	@IS_WINDOWS@;
		};
	
		struct cmake {
			static constexpr const char * name				=	"cmake";
			static constexpr const char * named_version		=	"cmake @CMAKE_VERSION@";
			static constexpr unsigned     version[]			=	{ @CMAKE_VERSION_ARRAY@ };
			static constexpr const char * generated			=	"@CMAKE_GENERATOR@";
		};

		struct doctest {		//	https://github.com/doctest/doctest
			static constexpr const char * name				=	"doctest";
			static constexpr const char * named_version		=	"doctest @DOCTEST_VERSION@";
			static constexpr unsigned     version[]			=	{ @DOCTEST_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@DOCTEST@";
		};

		struct fmt {			//	https://github.com/fmtlib/fmt
			static constexpr const char * name				=	"fmt";
			static constexpr const char * named_version		=	"fmt @FMT_VERSION@";
			static constexpr unsigned     version[]			=	{ @FMT_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@FORMAT@";
		};

		struct fast_float {		//	https://github.com/fastfloat/fast_float
			static constexpr const char * name				=	"fast_float";
			static constexpr const char * named_version		=	"fast_float @FAST_FLOAT_VERSION@";
			static constexpr unsigned     version[]			=	{ @FAST_FLOAT_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@FAST_FLOAT@";
		};

		struct gdal {			//	
			static constexpr const char * name				=	"gdal";
			static constexpr const char * named_version		=	"gdal @GDAL_VERSION@";
			static constexpr unsigned     version[]			=	{ @GDAL_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@GDAL_INCLUDE_DIR@";
			static constexpr const char * lib				=	"@GDAL_LIBRARY@";
		};

		struct nlohmann_json {	//	https://github.com/nlohmann/json
			static constexpr const char * name				=	"nlohmann/json";
			static constexpr const char * named_version		=	"nlohmann/json @NLOHMANN_JSON_VERSION@";
			static constexpr unsigned     version[]			=	{ @NLOHMANN_JSON_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@NLOHMANN_JSON@";
		};
		using json = nlohmann_json;

		struct pdal {			//	https://github.com/PDAL/PDAL
			static constexpr const char * name				=	"pdal";
			static constexpr const char * named_version		=	"pdal @PDAL_VERSION@";
			static constexpr unsigned     version[]			=	{ @PDAL_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@PDAL_INCLUDE_DIRS@";
			static constexpr const char * lib_dir			=	"@PDAL_LIBRARY_DIRS@";
			static constexpr const char * libraries			=	"@PDAL_LIBRARIES@";
			static constexpr const char * definitions		=	"@PDAL_DEFINITIONS@";
		};

		struct type_name_rt {	//	https://github.com/willwray/type_name
			static constexpr const char * name				=	"type_name_rt";
			static constexpr const char * named_version		=	"type_name_rt @TYPE_NAME_RT_VERSION@";
			static constexpr unsigned     version[]			=	{ @TYPE_NAME_RT_VERSION_ARRAY@ };
			static constexpr const char * include_dir		=	"@TYPE_NAME_RT@";
		};
	};
}	// namespace pax
